QUERY PLAN

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=7519052.06..7519905.65 rows=2406 width=40) (actual
rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=7519052.06..7519791.36 rows=4812 width=72) (actual rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=7518052.03..7518235.92 rows=2406 width=72) (actual rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp
without time zone))
               ->  Sort  (cost=7518052.03..7518067.12 rows=6034 width=124) (actual
rows=28170 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 2948kB
                     Worker 0:  Sort Method: quicksort  Memory: 2962kB
                     Worker 1:  Sort Method: quicksort  Memory: 2998kB
                     ->  Hash Join  (cost=7488935.13..7517673.13 rows=6034 width=124) (actual rows=28170 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Parallel Hash Join  (cost=7488933.57..7517622.88 rows=6034 width=24) (actual rows=28170 loops=3)
                                 Hash Cond: (supplier.s_suppkey = lineitem.l_suppkey)
                                 ->  Parallel Seq Scan on supplier  (cost=0.00..27101.67 rows=416667 width=12) (actual rows=333333 loops=3)
                                 ->  Parallel Hash  (cost=7488858.14..7488858.14 rows=6034 width=24) (actual rows=28170 loops=3)
                                       Buckets: 131072 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 7264kB
                                       ->  Parallel Hash Join  (cost=7027239.00..7488858.14 rows=6034 width=24) (actual rows=28170 loops=3)
                                             Hash Cond: (customer.c_custkey = orders.o_custkey)
                                             ->  Hash Join  (cost=2.41..457672.91 rows=250000 width=4) (actual rows=999920 loops=3)
                                                   Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..431733.00 rows=6250000 width=12) (actual rows=5000000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=1 width=4) (actual rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1
 Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=1 width=4) (actual rows=5 loops=3)
                                                               Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=12) (actual rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual rows=1 loops=3)
                                                                     Buckets: 1024
 Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual rows=1 loops=3)
                                                                           Filter:
(r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Parallel Hash  (cost=7024318.90..7024318.90 rows=150855 width=32) (actual rows=140784 loops=3)
                                                   Buckets: 65536  Batches: 8  Memory Usage: 4288kB
                                                   ->  Nested Loop  (cost=1.14..7024318.90 rows=150855 width=32) (actual rows=140784 loops=3)
                                                         ->  Nested Loop  (cost=0.57..2778607.13 rows=494195 width=28) (actual rows=463805 loops=3)
                                                               ->  Parallel Seq Scan on part  (cost=0.00..513761.67 rows=55496 width=4) (actual rows=44435 loops=3)
                                                                     Filter: ((p_type)::text = 'PROMO BRUSHED COPPER'::text)
                                                                     Rows Removed by Filter: 6622231
                                                               ->  Index Scan using l_partkey_idx on lineitem  (cost=0.57..40.72 rows=9 width=36) (actual rows=10 loops=133306)
                                                                     Index Cond: (l_partkey = part.p_partkey)
                                                         ->  Index Scan using orders_pkey on orders  (cost=0.57..8.59 rows=1 width=16) (actual rows=0 loops=1391416)
                                                               Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                               Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                               Rows Removed by Filter: 1
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual rows=25 loops=3)
 Planning Time: 14.061 ms
 Execution Time: 9346341.008 ms
(52 rows)
