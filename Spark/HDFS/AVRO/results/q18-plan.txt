
== Physical Plan ==
TakeOrderedAndProject(limit=100, orderBy=[o_totalprice#93 DESC NULLS LAST,o_orderdates#94 ASC NULLS FIRST], output=[c_name#111,c_custkey#110,o_orderkey#90,o_orderdates#94,o_totalprice#93,sum(l_quantity)#99333])
+- *(13) HashAggregate(keys=[c_name#111, c_custkey#110, o_orderkey#90, o_orderdates#94, o_totalprice#93], functions=[sum(l_quantity#60)])
   +- *(13) HashAggregate(keys=[c_name#111, c_custkey#110, o_orderkey#90, o_orderdates#94, o_totalprice#93], functions=[partial_sum(l_quantity#60)])
      +- *(13) Project [l_quantity#60, c_name#111, c_custkey#110, o_orderkey#90, o_orderdates#94, o_totalprice#93]
         +- *(13) SortMergeJoin [o_custkey#91], [c_custkey#110], Inner
            :- *(10) Sort [o_custkey#91 ASC NULLS FIRST], false, 0
            :  +- Exchange hashpartitioning(o_custkey#91, 200)
            :     +- *(9) Project [o_orderkey#90, o_custkey#91, o_totalprice#93, o_orderdates#94, l_quantity#60]
            :        +- *(9) SortMergeJoin [o_orderkey#90], [l_orderkey#56], Inner
            :           :- *(6) Project [o_orderkey#90, o_custkey#91, o_totalprice#93, o_orderdates#94]
            :           :  +- *(6) SortMergeJoin [key#99077], [o_orderkey#90], Inner
            :           :     :- *(3) Sort [key#99077 ASC NULLS FIRST], false, 0
            :           :     :  +- Exchange hashpartitioning(key#99077, 200)
            :           :     :     +- *(2) Project [l_orderkey#56 AS key#99077]
            :           :     :        +- *(2) Filter (isnotnull(sum_quantity#99070) && (sum_quantity#99070 > 313.0))
            :           :     :           +- *(2) HashAggregate(keys=[l_orderkey#56], functions=[sum(l_quantity#60)])
            :           :     :              +- Exchange hashpartitioning(l_orderkey#56, 200)
            :           :     :                 +- *(1) HashAggregate(keys=[l_orderkey#56], functions=[partial_sum(l_quantity#60)])
            :           :     :                    +- *(1) Project [l_orderkey#56, l_quantity#60]
            :           :     :                       +- *(1) Filter isnotnull(l_orderkey#56)
            :           :     :                          +- *(1) FileScan avro [l_orderkey#56,l_quantity#60] Batched: false, Format: com.databricks.spark.avro.DefaultSource@7bfb5a4, Location: InMemoryFileIndex[hdfs://namenode:8020/lineitem.avro], PartitionFilters: [], PushedFilters: [IsNotNull(l_orderkey)], ReadSchema: struct<l_orderkey:int,l_quantity:double>
            :           :     +- *(5) Sort [o_orderkey#90 ASC NULLS FIRST], false, 0
            :           :        +- Exchange hashpartitioning(o_orderkey#90, 200)
            :           :           +- *(4) Project [o_orderkey#90, o_custkey#91, o_totalprice#93, o_orderdates#94]
            :           :              +- *(4) Filter (isnotnull(o_orderkey#90) && isnotnull(o_custkey#91))
            :           :                 +- *(4) FileScan avro [o_orderkey#90,o_custkey#91,o_totalprice#93,o_orderdates#94] Batched: false, Format: com.databricks.spark.avro.DefaultSource@6fb4750c, Location: InMemoryFileIndex[hdfs://namenode:8020/orders.avro], PartitionFilters: [], PushedFilters: [IsNotNull(o_orderkey), IsNotNull(o_custkey)], ReadSchema: struct<o_orderkey:int,o_custkey:int,o_totalprice:double,o_orderdates:string>
            :           +- *(8) Sort [l_orderkey#56 ASC NULLS FIRST], false, 0
            :              +- Exchange hashpartitioning(l_orderkey#56, 200)
            :                 +- *(7) Project [l_orderkey#56, l_quantity#60]
            :                    +- *(7) Filter isnotnull(l_orderkey#56)
            :                       +- *(7) FileScan avro [l_orderkey#56,l_quantity#60] Batched: false, Format: com.databricks.spark.avro.DefaultSource@7bfb5a4, Location: InMemoryFileIndex[hdfs://namenode:8020/lineitem.avro], PartitionFilters: [], PushedFilters: [IsNotNull(l_orderkey)], ReadSchema: struct<l_orderkey:int,l_quantity:double>
            +- *(12) Sort [c_custkey#110 ASC NULLS FIRST], false, 0
               +- Exchange hashpartitioning(c_custkey#110, 200)
                  +- *(11) Project [c_custkey#110, c_name#111]
                     +- *(11) Filter isnotnull(c_custkey#110)
                        +- *(11) FileScan avro [c_custkey#110,c_name#111] Batched: false, Format: com.databricks.spark.avro.DefaultSource@4c50e846, Location: InMemoryFileIndex[hdfs://namenode:8020/customer.avro], PartitionFilters: [], PushedFilters: [IsNotNull(c_custkey)], ReadSchema: struct<c_custkey:int,c_name:string>
