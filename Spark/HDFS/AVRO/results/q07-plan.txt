
== Physical Plan ==
*(18) Sort [supp_nation#68594 ASC NULLS FIRST, cust_nation#68708 ASC NULLS FIRST, l_year#68733 ASC NULLS FIRST], true, 0
+- Exchange rangepartitioning(supp_nation#68594 ASC NULLS FIRST, cust_nation#68708 ASC NULLS FIRST, l_year#68733 ASC NULLS FIRST, 200)
   +- *(17) HashAggregate(keys=[supp_nation#68594, cust_nation#68708, l_year#68733], functions=[sum(volume#68734)])
      +- Exchange hashpartitioning(supp_nation#68594, cust_nation#68708, l_year#68733, 200)
         +- *(16) HashAggregate(keys=[supp_nation#68594, cust_nation#68708, l_year#68733], functions=[partial_sum(volume#68734)])
            +- *(16) Project [supp_nation#68594, cust_nation#68708, pythonUDF0#81888 AS l_year#68733, (l_extendedprice#9905 * (1.0 - l_discount#9906)) AS volume#68734]
               +- BatchEvalPython [<lambda>(l_shipdate#9910)], [cust_nation#68708, l_discount#9906, l_extendedprice#9905, l_shipdate#9910, supp_nation#68594, pythonUDF0#81888]
                  +- *(15) Project [cust_nation#68708, l_discount#9906, l_extendedprice#9905, l_shipdate#9910, supp_nation#68594]
                     +- *(15) SortMergeJoin [o_orderkey#9743], [l_orderkey#9900], Inner, ((StartsWith(supp_nation#68594, ROMANIA) && StartsWith(cust_nation#68708, INDIA)) || (StartsWith(supp_nation#68594, INDIA) && StartsWith(cust_nation#68708, ROMANIA)))
                        :- *(7) Sort [o_orderkey#9743 ASC NULLS FIRST], false, 0
                        :  +- Exchange hashpartitioning(o_orderkey#9743, 200)
                        :     +- *(6) Project [n_name#3729 AS cust_nation#68708, o_orderkey#9743]
                        :        +- *(6) SortMergeJoin [c_custkey#9766], [o_custkey#9744], Inner
                        :           :- *(3) Sort [c_custkey#9766 ASC NULLS FIRST], false, 0
                        :           :  +- Exchange hashpartitioning(c_custkey#9766, 200)
                        :           :     +- *(2) Project [n_name#3729, c_custkey#9766]
                        :           :        +- *(2) BroadcastHashJoin [n_nationkey#3728], [c_nationkey#9769], Inner, BuildLeft
                        :           :           :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                        :           :           :  +- *(1) Project [n_nationkey#3728, n_name#3729]
                        :           :           :     +- *(1) Filter ((StartsWith(n_name#3729, ROMANIA) || StartsWith(n_name#3729, INDIA)) && isnotnull(n_nationkey#3728))
                        :           :           :        +- *(1) FileScan avro [n_nationkey#3728,n_name#3729] Batched: false, Format: com.databricks.spark.avro.DefaultSource@4222e8ff, Location: InMemoryFileIndex[hdfs://namenode:8020/nation.avro], PartitionFilters: [], PushedFilters: [Or(StringStartsWith(n_name,ROMANIA),StringStartsWith(n_name,INDIA)), IsNotNull(n_nationkey)], ReadSchema: struct<n_nationkey:int,n_name:string>
                        :           :           +- *(2) Project [c_custkey#9766, c_nationkey#9769]
                        :           :              +- *(2) Filter (isnotnull(c_nationkey#9769) && isnotnull(c_custkey#9766))
                        :           :                 +- *(2) FileScan avro [c_custkey#9766,c_nationkey#9769] Batched: false, Format: com.databricks.spark.avro.DefaultSource@78c9fd24, Location: InMemoryFileIndex[hdfs://namenode:8020/customer.avro], PartitionFilters: [], PushedFilters: [IsNotNull(c_nationkey), IsNotNull(c_custkey)], ReadSchema: struct<c_custkey:int,c_nationkey:int>
                        :           +- *(5) Sort [o_custkey#9744 ASC NULLS FIRST], false, 0
                        :              +- Exchange hashpartitioning(o_custkey#9744, 200)
                        :                 +- *(4) Project [o_orderkey#9743, o_custkey#9744]
                        :                    +- *(4) Filter (isnotnull(o_custkey#9744) && isnotnull(o_orderkey#9743))
                        :                       +- *(4) FileScan avro [o_orderkey#9743,o_custkey#9744] Batched: false, Format: com.databricks.spark.avro.DefaultSource@221b3415, Location: InMemoryFileIndex[hdfs://namenode:8020/orders.avro], PartitionFilters: [], PushedFilters: [IsNotNull(o_custkey), IsNotNull(o_orderkey)], ReadSchema: struct<o_orderkey:int,o_custkey:int>
                        +- *(14) Sort [l_orderkey#9900 ASC NULLS FIRST], false, 0
                           +- Exchange hashpartitioning(l_orderkey#9900, 200)
                              +- *(13) Project [n_name#3729 AS supp_nation#68594, l_orderkey#9900, l_extendedprice#9905, l_discount#9906, l_shipdate#9910]
                                 +- *(13) SortMergeJoin [s_suppkey#3782], [l_suppkey#9902], Inner
                                    :- *(10) Sort [s_suppkey#3782 ASC NULLS FIRST], false, 0
                                    :  +- Exchange hashpartitioning(s_suppkey#3782, 200)
                                    :     +- *(9) Project [n_name#3729, s_suppkey#3782]
                                    :        +- *(9) BroadcastHashJoin [n_nationkey#3728], [s_nationkey#3785], Inner, BuildLeft
                                    :           :- ReusedExchange [n_nationkey#3728, n_name#3729], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
                                    :           +- *(9) Project [s_suppkey#3782, s_nationkey#3785]
                                    :              +- *(9) Filter (isnotnull(s_nationkey#3785) && isnotnull(s_suppkey#3782))
                                    :                 +- *(9) FileScan avro [s_suppkey#3782,s_nationkey#3785] Batched: false, Format: com.databricks.spark.avro.DefaultSource@38c5c37a, Location: InMemoryFileIndex[hdfs://namenode:8020/supplier.avro], PartitionFilters: [], PushedFilters: [IsNotNull(s_nationkey), IsNotNull(s_suppkey)], ReadSchema: struct<s_suppkey:int,s_nationkey:int>
                                    +- *(12) Sort [l_suppkey#9902 ASC NULLS FIRST], false, 0
                                       +- Exchange hashpartitioning(l_suppkey#9902, 200)
                                          +- *(11) Project [l_orderkey#9900, l_suppkey#9902, l_extendedprice#9905, l_discount#9906, l_shipdate#9910]
                                             +- *(11) Filter ((((isnotnull(l_shipdate#9910) && (l_shipdate#9910 >= 1995-01-01)) && (l_shipdate#9910 <= 1996-12-31)) && isnotnull(l_suppkey#9902)) && isnotnull(l_orderkey#9900))
                                                +- *(11) FileScan avro [l_orderkey#9900,l_suppkey#9902,l_extendedprice#9905,l_discount#9906,l_shipdate#9910] Batched: false, Format: com.databricks.spark.avro.DefaultSource@1265e3e0, Location: InMemoryFileIndex[hdfs://namenode:8020/lineitem.avro], PartitionFilters: [], PushedFilters: [IsNotNull(l_shipdate), GreaterThanOrEqual(l_shipdate,1995-01-01), LessThanOrEqual(l_shipdate,199..., ReadSchema: struct<l_orderkey:int,l_suppkey:int,l_extendedprice:double,l_discount:double,l_shipdate:string>
