
== Parsed Logical Plan ==
'Sort ['part_value DESC NULLS LAST], true
+- AnalysisBarrier
      +- Join Inner, (part_value#488 > if (isnull(total_value#481)) null else if (isnull(total_value#481)) null else UDF(total_value#481))
         :- Aggregate [ps_partkey#390], [ps_partkey#390, sum(value#477) AS part_value#488]
         :  +- Project [ps_partkey#390, if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else UDF(ps_supplycost#393, ps_availqty#392) AS value#477]
         :     +- Join Inner, (s_suppkey#402 = ps_suppkey#391)
         :        :- Project [s_suppkey#402]
         :        :  +- Join Inner, (n_nationkey#76 = s_nationkey#405)
         :        :     :- Filter (n_name#77 = ARGENTINA)
         :        :     :  +- Relation[n_nationkey#76,n_name#77,n_regionkey#78,n_comment#79] orc
         :        :     +- Relation[s_suppkey#402,s_name#403,s_address#404,s_nationkey#405,s_phone#406,s_acctbal#407,s_comment#408,s_dummy#409] orc
         :        +- Relation[ps_partkey#390,ps_suppkey#391,ps_availqty#392,ps_supplycost#393,ps_comment#394,ps_dummy#395] orc
         +- Aggregate [sum(value#477) AS total_value#481]
            +- Project [ps_partkey#390, if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else UDF(ps_supplycost#393, ps_availqty#392) AS value#477]
               +- Join Inner, (s_suppkey#402 = ps_suppkey#391)
                  :- Project [s_suppkey#402]
                  :  +- Join Inner, (n_nationkey#76 = s_nationkey#405)
                  :     :- Filter (n_name#77 = ARGENTINA)
                  :     :  +- Relation[n_nationkey#76,n_name#77,n_regionkey#78,n_comment#79] orc
                  :     +- Relation[s_suppkey#402,s_name#403,s_address#404,s_nationkey#405,s_phone#406,s_acctbal#407,s_comment#408,s_dummy#409] orc
                  +- Relation[ps_partkey#390,ps_suppkey#391,ps_availqty#392,ps_supplycost#393,ps_comment#394,ps_dummy#395] orc

== Analyzed Logical Plan ==
ps_partkey: int, part_value: double, total_value: double
Sort [part_value#488 DESC NULLS LAST], true
+- Join Inner, (part_value#488 > if (isnull(total_value#481)) null else if (isnull(total_value#481)) null else UDF(total_value#481))
   :- Aggregate [ps_partkey#390], [ps_partkey#390, sum(value#477) AS part_value#488]
   :  +- Project [ps_partkey#390, if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else UDF(ps_supplycost#393, ps_availqty#392) AS value#477]
   :     +- Join Inner, (s_suppkey#402 = ps_suppkey#391)
   :        :- Project [s_suppkey#402]
   :        :  +- Join Inner, (n_nationkey#76 = s_nationkey#405)
   :        :     :- Filter (n_name#77 = ARGENTINA)
   :        :     :  +- Relation[n_nationkey#76,n_name#77,n_regionkey#78,n_comment#79] orc
   :        :     +- Relation[s_suppkey#402,s_name#403,s_address#404,s_nationkey#405,s_phone#406,s_acctbal#407,s_comment#408,s_dummy#409] orc
   :        +- Relation[ps_partkey#390,ps_suppkey#391,ps_availqty#392,ps_supplycost#393,ps_comment#394,ps_dummy#395] orc
   +- Aggregate [sum(value#477) AS total_value#481]
      +- Project [ps_partkey#390, if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else UDF(ps_supplycost#393, ps_availqty#392) AS value#477]
         +- Join Inner, (s_suppkey#402 = ps_suppkey#391)
            :- Project [s_suppkey#402]
            :  +- Join Inner, (n_nationkey#76 = s_nationkey#405)
            :     :- Filter (n_name#77 = ARGENTINA)
            :     :  +- Relation[n_nationkey#76,n_name#77,n_regionkey#78,n_comment#79] orc
            :     +- Relation[s_suppkey#402,s_name#403,s_address#404,s_nationkey#405,s_phone#406,s_acctbal#407,s_comment#408,s_dummy#409] orc
            +- Relation[ps_partkey#390,ps_suppkey#391,ps_availqty#392,ps_supplycost#393,ps_comment#394,ps_dummy#395] orc

== Optimized Logical Plan ==
Sort [part_value#488 DESC NULLS LAST], true
+- Join Inner, (part_value#488 > if (isnull(total_value#481)) null else if (isnull(total_value#481)) null else UDF(total_value#481))
   :- Filter isnotnull(part_value#488)
   :  +- Aggregate [ps_partkey#390], [ps_partkey#390, sum(value#477) AS part_value#488]
   :     +- Project [ps_partkey#390, if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else UDF(ps_supplycost#393, ps_availqty#392) AS value#477]
   :        +- Join Inner, (s_suppkey#402 = ps_suppkey#391)
   :           :- Project [s_suppkey#402]
   :           :  +- Join Inner, (n_nationkey#76 = s_nationkey#405)
   :           :     :- Project [n_nationkey#76]
   :           :     :  +- Filter ((isnotnull(n_name#77) && (n_name#77 = ARGENTINA)) && isnotnull(n_nationkey#76))
   :           :     :     +- Relation[n_nationkey#76,n_name#77,n_regionkey#78,n_comment#79] orc
   :           :     +- Project [s_suppkey#402, s_nationkey#405]
   :           :        +- Filter (isnotnull(s_nationkey#405) && isnotnull(s_suppkey#402))
   :           :           +- Relation[s_suppkey#402,s_name#403,s_address#404,s_nationkey#405,s_phone#406,s_acctbal#407,s_comment#408,s_dummy#409] orc
   :           +- Project [ps_partkey#390, ps_suppkey#391, ps_availqty#392, ps_supplycost#393]
   :              +- Filter isnotnull(ps_suppkey#391)
   :                 +- Relation[ps_partkey#390,ps_suppkey#391,ps_availqty#392,ps_supplycost#393,ps_comment#394,ps_dummy#395] orc
   +- Aggregate [sum(value#477) AS total_value#481]
      +- Project [if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else UDF(ps_supplycost#393, ps_availqty#392) AS value#477]
         +- Join Inner, (s_suppkey#402 = ps_suppkey#391)
            :- Project [s_suppkey#402]
            :  +- Join Inner, (n_nationkey#76 = s_nationkey#405)
            :     :- Project [n_nationkey#76]
            :     :  +- Filter ((isnotnull(n_name#77) && (n_name#77 = ARGENTINA)) && isnotnull(n_nationkey#76))
            :     :     +- Relation[n_nationkey#76,n_name#77,n_regionkey#78,n_comment#79] orc
            :     +- Project [s_suppkey#402, s_nationkey#405]
            :        +- Filter (isnotnull(s_nationkey#405) && isnotnull(s_suppkey#402))
            :           +- Relation[s_suppkey#402,s_name#403,s_address#404,s_nationkey#405,s_phone#406,s_acctbal#407,s_comment#408,s_dummy#409] orc
            +- Project [ps_suppkey#391, ps_availqty#392, ps_supplycost#393]
               +- Filter isnotnull(ps_suppkey#391)
                  +- Relation[ps_partkey#390,ps_suppkey#391,ps_availqty#392,ps_supplycost#393,ps_comment#394,ps_dummy#395] orc

== Physical Plan ==
*(15) Sort [part_value#488 DESC NULLS LAST], true, 0
+- Exchange rangepartitioning(part_value#488 DESC NULLS LAST, 200)
   +- BroadcastNestedLoopJoin BuildRight, Inner, (part_value#488 > if (isnull(total_value#481)) null else if (isnull(total_value#481)) null else UDF(total_value#481))
      :- *(7) Filter isnotnull(part_value#488)
      :  +- *(7) HashAggregate(keys=[ps_partkey#390], functions=[sum(value#477)], output=[ps_partkey#390, part_value#488])
      :     +- Exchange hashpartitioning(ps_partkey#390, 200)
      :        +- *(6) HashAggregate(keys=[ps_partkey#390], functions=[partial_sum(value#477)], output=[ps_partkey#390, sum#512])
      :           +- *(6) Project [ps_partkey#390, if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else UDF(ps_supplycost#393, ps_availqty#392) AS value#477]
      :              +- *(6) SortMergeJoin [s_suppkey#402], [ps_suppkey#391], Inner
      :                 :- *(3) Sort [s_suppkey#402 ASC NULLS FIRST], false, 0
      :                 :  +- Exchange hashpartitioning(s_suppkey#402, 200)
      :                 :     +- *(2) Project [s_suppkey#402]
      :                 :        +- *(2) BroadcastHashJoin [n_nationkey#76], [s_nationkey#405], Inner, BuildLeft
      :                 :           :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))
      :                 :           :  +- *(1) Project [n_nationkey#76]
      :                 :           :     +- *(1) Filter ((isnotnull(n_name#77) && (n_name#77 = ARGENTINA)) && isnotnull(n_nationkey#76))
      :                 :           :        +- *(1) FileScan orc [n_nationkey#76,n_name#77] Batched: true, Format: ORC, Location: InMemoryFileIndex[hdfs://namenode:8020/nation.orc], PartitionFilters: [], PushedFilters: [IsNotNull(n_name), EqualTo(n_name,ARGENTINA), IsNotNull(n_nationkey)], ReadSchema: struct<n_nationkey:int,n_name:string>
      :                 :           +- *(2) Project [s_suppkey#402, s_nationkey#405]
      :                 :              +- *(2) Filter (isnotnull(s_nationkey#405) && isnotnull(s_suppkey#402))
      :                 :                 +- *(2) FileScan orc [s_suppkey#402,s_nationkey#405] Batched: true, Format: ORC, Location: InMemoryFileIndex[hdfs://namenode:8020/supplier.orc], PartitionFilters: [], PushedFilters: [IsNotNull(s_nationkey), IsNotNull(s_suppkey)], ReadSchema: struct<s_suppkey:int,s_nationkey:int>
      :                 +- *(5) Sort [ps_suppkey#391 ASC NULLS FIRST], false, 0
      :                    +- Exchange hashpartitioning(ps_suppkey#391, 200)
      :                       +- *(4) Project [ps_partkey#390, ps_suppkey#391, ps_availqty#392, ps_supplycost#393]
      :                          +- *(4) Filter isnotnull(ps_suppkey#391)
      :                             +- *(4) FileScan orc [ps_partkey#390,ps_suppkey#391,ps_availqty#392,ps_supplycost#393] Batched: true, Format: ORC, Location: InMemoryFileIndex[hdfs://namenode:8020/partsupp.orc], PartitionFilters: [], PushedFilters: [IsNotNull(ps_suppkey)], ReadSchema: struct<ps_partkey:int,ps_suppkey:int,ps_availqty:int,ps_supplycost:double>
      +- BroadcastExchange IdentityBroadcastMode
         +- *(14) HashAggregate(keys=[], functions=[sum(value#477)], output=[total_value#481])
            +- Exchange SinglePartition
               +- *(13) HashAggregate(keys=[], functions=[partial_sum(value#477)], output=[sum#514])
                  +- *(13) Project [if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else if ((isnull(ps_supplycost#393) || isnull(ps_availqty#392))) null else UDF(ps_supplycost#393, ps_availqty#392) AS value#477]
                     +- *(13) SortMergeJoin [s_suppkey#402], [ps_suppkey#391], Inner
                        :- *(10) Sort [s_suppkey#402 ASC NULLS FIRST], false, 0
                        :  +- ReusedExchange [s_suppkey#402], Exchange hashpartitioning(s_suppkey#402, 200)
                        +- *(12) Sort [ps_suppkey#391 ASC NULLS FIRST], false, 0
                           +- Exchange hashpartitioning(ps_suppkey#391, 200)
                              +- *(11) Project [ps_suppkey#391, ps_availqty#392, ps_supplycost#393]
                                 +- *(11) Filter isnotnull(ps_suppkey#391)
                                    +- *(11) FileScan orc [ps_suppkey#391,ps_availqty#392,ps_supplycost#393] Batched: true, Format: ORC, Location: InMemoryFileIndex[hdfs://namenode:8020/partsupp.orc], PartitionFilters: [], PushedFilters: [IsNotNull(ps_suppkey)], ReadSchema: struct<ps_suppkey:int,ps_availqty:int,ps_supplycost:double>

